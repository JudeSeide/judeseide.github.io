---
import type { Page, GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import PageLayout from '@/layouts/Base';
import DetailedPostPreview from '@/components/blog/DetailedPostPreview';
import Pagination from '@/components/Paginator';
import { getAllPosts, getUniqueTags, sortMDByDate } from '@/utils';

export const getStaticPaths = (async ({ paginate }) => {
    const allPosts = await getAllPosts();
    const allPostsByDate = sortMDByDate(allPosts);
    const uniqueTags = getUniqueTags(allPosts);

    return paginate(allPostsByDate, { props: { uniqueTags }, pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
    page: Page<CollectionEntry<'post'>>;
    uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
    title: 'Posts',
    description: 'Ready my collection of posts and the things that interest me',
};

const paginationProps = {
    ...(page.url.prev && {
        prevUrl: {
            url: page.url.prev,
            text: `← previous posts`,
        },
    }),
    ...(page.url.next && {
        nextUrl: {
            url: page.url.next,
            text: `next posts →`,
        },
    }),
};
---

<PageLayout meta={meta}>
    <div class="grid gap-y-16 xl:grid-cols-[5fr_1fr] sm:gap-x-12">
        <section aria-label="Blog post list">
            <h1 class="title mb-6 uppercase">Posts</h1>
            <div class="grid grid-flow-row auto-rows-max gap-y-16 sm:grid-cols-[2fr_2fr] sm:gap-x-16">
                {
                    page.data.map((p) => (
                        <div class="w-fit">
                            <DetailedPostPreview post={p} as="h2"/>
                        </div>
                    ))
                }
            </div>
            <Pagination {...paginationProps}/>
        </section>
        {
            !!uniqueTags.length && (
                <aside>
                    <h2 class="mb-6 flex items-center text-lg font-semibold lowercase">
                        <svg
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-6 w-6"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            fill="none"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        >
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path
                                d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z"
                            />
                            <path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116"/>
                            <path d="M6 9h-.01"/>
                        </svg>
                        Tags
                    </h2>
                    <ul class="flex flex-wrap gap-3 text-bgColor">
                        {uniqueTags.map((tag) => (
                            <li>
                                <a
                                    class="flex items-center justify-center rounded-lg bg-accent p-1 lowercase"
                                    href={`/tags/${tag}/`}
                                    aria-label={`View all posts with the tag: ${tag}`}
                                >
                                    {tag}
                                </a>
                            </li>
                        ))}
                    </ul>
                    <span class="mt-4 block xl:text-end">
						<a
                            class="sm:hover:text-accent duration-500 lowercase"
                            href="/tags/"
                            aria-label="View all blog categories"
                        >
							View all →
						</a>
					</span>
                </aside>
            )
        }
    </div>
</PageLayout>
