---
import type { Page, GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import PageLayout from '@/layouts/Base';
import DetailedPostPreview from '@/components/blog/DetailedPostPreview';
import Pagination from '@/components/Paginator';
import { getAllPosts, getUniqueTags, sortMDByDate } from '@/utils';

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
    const allPosts = await getAllPosts();
    const allPostsByDate = sortMDByDate(allPosts);
    const uniqueTags = getUniqueTags(allPostsByDate);

    return uniqueTags.flatMap((tag) => {
        const filterPosts = allPostsByDate.filter((post) => post.data.tags.includes(tag));
        return paginate(filterPosts, {
            params: { tag },
            pageSize: 10,
        });
    });
};

interface Props {
    page: Page<CollectionEntry<'post'>>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
    title: `Tag: ${tag}`,
    description: `View all posts with the tag - ${tag}`,
};

const paginationProps = {
    ...(page.url.prev && {
        prevUrl: {
            url: page.url.prev,
            text: `← previous tags`,
        },
    }),
    ...(page.url.next && {
        nextUrl: {
            url: page.url.next,
            text: `next tags →`,
        },
    }),
};
---

<PageLayout meta={meta}>
    <h1 class="title mb-6 flex items-center">
        <a href="/tags/" class="text-accent sm:hover:underline uppercase">Tags</a>
        <span class="me-3 ms-2 -mt-2">→</span>
        <span class="text-xl lowercase">#{tag}</span>
    </h1>
    <section aria-label="Blog post list">
        <div class="grid grid-flow-row auto-rows-max gap-y-16 sm:grid-cols-[2fr_2fr] sm:gap-x-16">
            {
                page.data.map((p) => (
                    <div class="w-fit">
                        <DetailedPostPreview post={p} as="h2"/>
                    </div>
                ))
            }
        </div>
        <Pagination {...paginationProps}/>
    </section>
</PageLayout>
